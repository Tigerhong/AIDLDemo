apply plugin: 'com.android.library'

android {
    compileSdkVersion 28


    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}

//添加输出Jar包任务
def static releaseTime() {
    return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
}

ext {
    JAR_VERSION = "1.0.0"
    JAR_NAME = "apple-control"
    JAR_OUTPUT_DIR = 'build/libs'
    JAR_ORIGINAL_PATH = 'build/intermediates/packaged-classes/release/classes.jar'
}

project.afterEvaluate {
    Task cleanSdk = tasks.getByPath('clean')
    //bundleRelease在3.4.2上不能用应该替换成bundleReleaseAar
    //3.4.2以下可能还可以用bundleRelease
    Task bundleSdk = tasks.getByPath('bundleReleaseAar')

    bundleSdk.mustRunAfter cleanSdk
    makeJar.dependsOn cleanSdk, bundleSdk
}

task makeJar(type: Jar) {
    from zipTree(file(JAR_ORIGINAL_PATH))
    // 添加assets文件夹，如果不需要请删除该行
    //from fileTree(dir: 'src/main', includes: ['assets/**'])
    baseName "${JAR_NAME}_v${JAR_VERSION}_${releaseTime()}"
    destinationDir file(JAR_OUTPUT_DIR)
}